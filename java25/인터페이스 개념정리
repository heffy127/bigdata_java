1. 인터페이스
기능정의에 강제성을 부여하기 위해 만들어진다
추상적이기 때문에 객체를 생성하여 쓸 수 없다
기능정의 용도이기에 여러곳에서 가져다 쓸 수 있도록  public으로 선언하는것이 좋다

2. 익명클래스
말 그대로 이름이 없는 클래스
객체를 만들면서 내용을 정의하는 형식이다.
다른 클래스 코드내에 삽입되어 필요한 시점에서 선언된다

3. 형변환
upcasting
- 묵시적 형변환 : 형변환 연산자를 사용하지 않아도 자동으로 이루어지는 형변환
			    더 넓은 범위로 데이터를 저장하기 때문에, 데이터의 손실이 없다.

downcasting			
- 명시적 형변환 : 데이터 손실이 발생할 수 있을때 강제로 형변환를 시킨다.
			    더 좁은 범위로 데이터를 저장하기 때문에, 데이터 손실의 위험이 존재한다.

4. 인터페이스와 클래스와의 관계
인터페이스는 객체를 생성할 수 없으며 일반 메서드가 아닌 추상메소드만 가질 수 있다.
만들어놓은 추상메소드를 반드시 구현해야 하는 강제성을 부여한다.

클래스는 추상메소드를 만들어도 강제성을 부여할 수 없다.

5. 다형성(오버로딩)
- "하나의 이름"으로 매개변수 차이에 따른 다양한 형태를 구현하는 기능.

*  재정의(오버라이딩) 
- 부모가 "상속해준 메소드"의 원래 기능을 바꾸어서 사용
				